# name: CD - Build & Push FaaS Manager Image

# on:
#   push:
#     branches: [ "main" ]
#     paths:
#       - "cmd/**"
#       - "internal/**"
#       - "pkg/**"
#       - "go.mod"
#       - "go.sum"
#       - "Dockerfile"
#       - ".github/workflows/cd-build.yaml"

# permissions:
#   contents: read
#   packages: write

# concurrency:
#   group: cd-build-${{ github.ref }}
#   cancel-in-progress: true

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Check for required secrets
#         run: |
#           test -n "${{ secrets.REGISTRY_URL }}" || (echo "Missing secret: REGISTRY_URL" && exit 1)
#           test -n "${{ secrets.REGISTRY_PROJECT }}" || (echo "Missing secret: REGISTRY_PROJECT" && exit 1)
#           test -n "${{ secrets.REGISTRY_REPO }}" || (echo "Missing secret: REGISTRY_REPO" && exit 1)
#           test -n "${{ secrets.REGISTRY_USERNAME }}" || (echo "Missing secret: REGISTRY_USERNAME" && exit 1)
#           test -n "${{ secrets.REGISTRY_PASSWORD }}" || (echo "Missing secret: REGISTRY_PASSWORD" && exit 1)

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to the Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ secrets.REGISTRY_URL }}
#           username: ${{ secrets.REGISTRY_USERNAME }}
#           password: ${{ secrets.REGISTRY_PASSWORD }}

#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_PROJECT }}/${{ secrets.REGISTRY_REPO }}
#           tags: |
#             type=raw,value=latest,enable={{is_default_branch}}
#             type=sha,format=short

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           platforms: linux/amd64,linux/arm64
#           cache-from: type=gha
#           cache-to: type=gha,mode=max
